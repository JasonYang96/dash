{"version":3,"sources":["budget/Budget.js","budget/Budgets.js","income/Income.js","saving/Saving.js","saving/Savings.js","models.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","paper","padding","spacing","textField","marginLeft","marginRight","width","connect","state","props","income","amount","budget","name","idx","dispatch","deleteBudget","money","updateBudgetName","classes","useState","editMode","setEditMode","Card","key","className","CardActions","Grid","item","xs","IconButton","aria-label","onClick","TextField","id","label","value","onChange","event","target","margin","Typography","CardContent","budgets","addBudget","map","Paper","length","Button","addIncome","variant","saving","deleteSaving","updateSavingName","savings","addSaving","reducers","push","splice","index","addBudgetAmount","effects","incrementAsync","payload","rootState","Promise","resolve","setTimeout","count","increment","store","init","models","app","display","alignItems","justifyContent","textAlign","fontSize","color","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","Container","container","Income","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.cb135c29.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport {\n  Card,\n  CardActions,\n  CardContent,\n  Grid,\n  IconButton,\n  TextField,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport SaveIcon from '@material-ui/icons/Save';\n\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    padding: theme.spacing(2),\n  },\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    width: 200,\n  },\n}));\n\nconst mapState = (state, props) => ({\n  income: state.income,\n  amount: props.budget.amount,\n  name: props.budget.name,\n  idx: props.idx,\n});\n\nconst mapDispatch = dispatch => ({\n  deleteBudget: (idx) => dispatch.money.deleteBudget(idx),\n  updateBudgetName: (idx, name) => dispatch.money.updateBudgetName(idx, name),\n});\n\nconst Budget = props => {\n  const classes = useStyles();\n  const [editMode, setEditMode] = useState(false);\n\n  const handleChange = event => {\n    props.updateBudgetName(props.idx, event.target.value);\n  };\n\n  const deleteBudget = () => {\n    props.deleteBudget(props.idx);\n  }\n\n  return (\n    <Card key={props.idx} className={classes.paper}>\n      <CardActions>\n        <Grid item xs={1}>\n          <IconButton aria-label=\"edit/save budget\" onClick={() => setEditMode(!editMode)}>\n            { editMode ?  <SaveIcon /> : <EditIcon /> }\n          </IconButton>\n        </Grid>\n        <Grid item xs={10}>\n          { editMode ?\n            <TextField\n              id=\"budgetName{props.idx}\"\n              label=\"Budget Name\"\n              className={classes.textField}\n              value={props.name}\n              onChange={handleChange}\n              margin=\"normal\"\n            /> :\n            <Typography>{props.name}</Typography>\n          }\n        </Grid>\n        <Grid item xs={1}>\n          <IconButton aria-label=\"delete budget\" onClick={deleteBudget}>\n            <DeleteIcon />\n          </IconButton>\n        </Grid>\n      </CardActions>\n      <CardContent>\n        <Typography>Budget is ${props.amount}</Typography>\n      </CardContent>\n    </Card>\n  )\n}\n\nexport default connect(mapState, mapDispatch)(Budget);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Button, Grid, Paper, Typography, makeStyles } from '@material-ui/core';\n\nimport Budget from './Budget';\n\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    padding: theme.spacing(2),\n  }\n}));\n\nconst mapState = state => ({\n  budgets: state.money.budgets,\n});\n\nconst mapDispatch = dispatch => ({\n  addBudget: () => dispatch.money.addBudget(),\n});\n\nconst Budgets = props => {\n  const classes = useStyles();\n  const budgets = props.budgets.map((budget, idx) =>\n    <Budget budget={budget} key={idx} idx={idx} />\n  );\n\n  return (\n    <Grid item xs={6}>\n      <Paper className={classes.paper}>\n        <Typography>Dash Budget</Typography>\n        {props.budgets.length < 5 &&  <Button onClick={props.addBudget}>Add Budget</Button>}\n        {budgets}\n      </Paper>\n    </Grid>\n  )\n}\n\nexport default connect(mapState, mapDispatch)(Budgets);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Grid, Paper, Typography, Button, makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    padding: theme.spacing(2),\n  }\n}));\n\nconst mapState = state => ({\n  income: state.money.income,\n});\n\nconst mapDispatch = dispatch => ({\n  addIncome: () => dispatch.money.addIncome(10),\n});\n\nconst Budget = props => {\n  const classes = useStyles();\n  return (\n    <Grid item xs={12}>\n      <Paper className={classes.paper}>\n        <Typography>{props.income}</Typography>\n        <Button variant=\"contained\" onClick={props.addIncome}>Add Income</Button>\n      </Paper>\n    </Grid>\n  )\n}\n\nexport default connect(mapState, mapDispatch)(Budget);\n","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport {\n  Card,\n  CardActions,\n  CardContent,\n  Grid,\n  IconButton,\n  TextField,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport SaveIcon from '@material-ui/icons/Save';\n\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    padding: theme.spacing(2),\n  },\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    width: 200,\n  },\n}));\n\nconst mapState = (state, props) => ({\n  income: state.income,\n  amount: props.saving.amount,\n  name: props.saving.name,\n  idx: props.idx,\n});\n\nconst mapDispatch = dispatch => ({\n  deleteSaving: (idx) => dispatch.money.deleteSaving(idx),\n  updateSavingName: (idx, name) => dispatch.money.updateSavingName(idx, name),\n});\n\nconst Saving = props => {\n  const classes = useStyles();\n  const [editMode, setEditMode] = useState(false);\n\n  const handleChange = event => {\n    props.updateSavingName(props.idx, event.target.value);\n  };\n\n  const deleteSaving = () => {\n    props.deleteSaving(props.idx);\n  }\n\n  return (\n    <Card key={props.idx} className={classes.paper}>\n      <CardActions>\n        <Grid item xs={1}>\n          <IconButton aria-label=\"edit/save saving\" onClick={() => setEditMode(!editMode)}>\n            { editMode ?  <SaveIcon /> : <EditIcon /> }\n          </IconButton>\n        </Grid>\n        <Grid item xs={10}>\n          { editMode ?\n            <TextField\n              id=\"savingName{props.idx}\"\n              label=\"Saving Name\"\n              className={classes.textField}\n              value={props.name}\n              onChange={handleChange}\n              margin=\"normal\"\n            /> :\n            <Typography>{props.name}</Typography>\n          }\n        </Grid>\n        <Grid item xs={1}>\n          <IconButton aria-label=\"delete saving\" onClick={deleteSaving}>\n            <DeleteIcon />\n          </IconButton>\n        </Grid>\n      </CardActions>\n      <CardContent>\n        <Typography>You have saved ${props.amount}</Typography>\n      </CardContent>\n    </Card>\n  )\n}\n\nexport default connect(mapState, mapDispatch)(Saving);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Button, Grid, Paper, Typography, makeStyles } from '@material-ui/core';\n\nimport Saving from './Saving';\n\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    padding: theme.spacing(2),\n  }\n}));\n\nconst mapState = state => ({\n  savings: state.money.savings,\n});\n\nconst mapDispatch = dispatch => ({\n  addSaving: () => dispatch.money.addSaving(),\n});\n\nconst Savings = props => {\n  const classes = useStyles();\n  const savings = props.savings.map((saving, idx) =>\n    <Saving saving={saving} key={idx} idx={idx} />\n  );\n\n  return (\n    <Grid item xs={6}>\n      <Paper className={classes.paper}>\n        <Typography>Dash saving</Typography>\n        {props.savings.length < 5 &&  <Button onClick={props.addSaving}>Add saving</Button>}\n        {savings}\n      </Paper>\n    </Grid>\n  )\n}\n\nexport default connect(mapState, mapDispatch)(Savings);\n","export const money = {\n  state: {\n    income: 0,\n    budgets: [],\n    savings: [],\n  },\n  reducers: {\n    addBudget: state => {\n      let budgets = [...state.budgets];\n      budgets.push({\n        amount: 0,\n        name: \"Budget Name\",\n      });\n\n      return {\n        ...state,\n        budgets: budgets,\n      }\n    },\n    deleteBudget: (state, idx) => {\n      let budgets = [...state.budgets];\n      budgets.splice(idx, 1)\n\n      return {\n        ...state,\n        budgets: budgets,\n      }\n    },\n    updateBudgetName: (state, index, name) => {\n      let budgets = [...state.budgets];\n      budgets[index].name = name;\n\n      return {...state, budgets: budgets}\n    },\n    addBudgetAmount: (state, index, amount) => {\n      let budgets = [...state.budgets];\n      let income = state.income;\n      budgets[index].amount += amount;\n      income -= amount;\n\n      return {...state, budgets: budgets, income: income}\n    },\n    updateSavingName: (state, index, name) => {\n      let savings = [...state.savings];\n      savings[index].name = name;\n\n      return {...state, savings: savings}\n    },\n    deleteSaving: (state, idx) => {\n      let savings = [...state.savings];\n      savings.splice(idx, 1)\n\n      return {\n        ...state,\n        savings: savings,\n      }\n    },\n    addSaving: state => {\n      let savings = [...state.savings];\n      savings.push({\n        amount: 0,\n        name: \"Savings Goal\",\n      });\n\n      return {\n        ...state,\n        savings: savings,\n      }\n    },\n    addIncome: (state, income) => ({\n      ...state, income: state.income + income\n    }),\n  },\n  effects: (dispatch) => ({\n    // handle state changes with impure functions.\n    // use async/await for async actions\n    async incrementAsync(payload, rootState) {\n      await new Promise(resolve => setTimeout(resolve, 1000))\n      dispatch.count.increment(payload)\n    }\n  })\n}","import React from 'react';\nimport { Provider } from 'react-redux';\nimport { init } from '@rematch/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport Budgets from './budget/Budgets';\nimport Income from './income/Income';\nimport Savings from './saving/Savings';\nimport * as models from './models';\n\nconst store = init({\n  models,\n});\n\nconst useStyles = makeStyles(theme => ({\n  app: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    textAlign: \"center\",\n    fontSize: \"calc(10px + 2vmin)\",\n    color: \"white\",\n  },\n}));\n\nexport default function App() {\n  const classes = useStyles();\n  return (\n    <React.StrictMode>\n      <Provider store={store}>\n        <Container className={classes.app}>\n          <Grid container spacing={5}>\n            <Income />\n            <Budgets />\n            <Savings />\n          </Grid>\n        </Container>\n      </Provider>\n    </React.StrictMode>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}